(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{676:function(t,a,r){"use strict";r.r(a);var e=r(71),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"lc-53-最大的子数组和"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lc-53-最大的子数组和"}},[t._v("#")]),t._v(" LC 53 "),r("a",{attrs:{href:"https://leetcode.com/problems/maximum-subarray/",target:"_blank",rel:"noopener noreferrer"}},[t._v("最大的子数组和"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"题目描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),r("p",[t._v("给定一个整数数组nums，查找具有最大和的连续子数组(至少包含一个数字)并返回其和。")]),t._v(" "),r("h4",{attrs:{id:"例子1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#例子1"}},[t._v("#")]),t._v(" 例子1")]),t._v(" "),r("p",[t._v("输入: nums = [-2,1,-3,4,-1,2,1,-5,4]")]),t._v(" "),r("p",[t._v("输出: 6")]),t._v(" "),r("p",[t._v("解释: [4,-1,2,1] 有最大和为 6.")]),t._v(" "),r("h4",{attrs:{id:"例子2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#例子2"}},[t._v("#")]),t._v(" 例子2")]),t._v(" "),r("p",[t._v("输入: nums = [1]")]),t._v(" "),r("p",[t._v("输出: 1")]),t._v(" "),r("h3",{attrs:{id:"题解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题解"}},[t._v("#")]),t._v(" 题解")]),t._v(" "),r("p",[t._v("首先看这道题，题干说找到给定数组的最大子数组和。是否可以联想到先按最简单的数组来思考，再扩充到更长的数组？")]),t._v(" "),r("p",[t._v("例如，先考虑例子1中的 "),r("code",[t._v("[-2]")]),t._v("。可以发现，它本身即为最大的子数组，和为 -2。这是符合题目要求的测试用例，其结果也被接受。")]),t._v(" "),r("p",[t._v("如果更进一步呢？可以发现，"),r("code",[t._v("[-2,1]")]),t._v(" 现在是由包含 "),r("code",[t._v("[-2]")]),t._v(" 这个子数组构成的。这种情况下涉及到了 3 种可能性："),r("code",[t._v("[-2] [1] [-2,1]")]),t._v("，因为题目是最大子数组，当加入 1 需要考虑的就变成了包含1或者不包含1（子数组从 1 重新计算）。所以，含有 -2 的数组我们可以借助前一个答案来继续计算，既加上1和不加上1的比较。")])])}),[],!1,null,null,null);a.default=s.exports}}]);